diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4d5abc81c..a592fbf74 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -370,7 +370,7 @@ configure_file(
         ${PROJECT_SOURCE_DIR}/cmake/modules/SRSRAN_install_configs.sh.in
         ${CMAKE_BINARY_DIR}/srsran_install_configs.sh
 )
-install(PROGRAMS ${CMAKE_BINARY_DIR}/srsran_install_configs.sh DESTINATION ${RUNTIME_DIR})
+#install(PROGRAMS ${CMAKE_BINARY_DIR}/srsran_install_configs.sh DESTINATION ${RUNTIME_DIR})
 
 # Disables the project to build when calling "make install"
 set(CMAKE_SKIP_INSTALL_ALL_DEPENDENCY TRUE)
diff --git a/lib/CMakeLists.txt b/lib/CMakeLists.txt
index 29b1f2f85..a3339d1dd 100644
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -29,6 +29,6 @@ add_subdirectory(test)
 ########################################################################
 # Install library headers
 ########################################################################
-INSTALL(  DIRECTORY include/
-          DESTINATION "${INCLUDE_DIR}"
-          FILES_MATCHING PATTERN "*.h" )
\ No newline at end of file
+#INSTALL(  DIRECTORY include/
+#          DESTINATION "${INCLUDE_DIR}"
+#          FILES_MATCHING PATTERN "*.h" )
diff --git a/lib/examples/CMakeLists.txt b/lib/examples/CMakeLists.txt
index 2581ede59..b32e557e3 100644
--- a/lib/examples/CMakeLists.txt
+++ b/lib/examples/CMakeLists.txt
@@ -31,16 +31,16 @@ target_link_libraries(synch_file srsran_phy)
 
 if(RF_FOUND)
   add_executable(pdsch_ue pdsch_ue.c)
-  target_link_libraries(pdsch_ue srsran_phy srsran_common srsran_rf pthread)
+  target_link_libraries(pdsch_ue srsran_phy srsran_common srsran_rf_emane pthread)
 
   add_executable(pdsch_enodeb pdsch_enodeb.c)
-  target_link_libraries(pdsch_enodeb srsran_phy srsran_common srsran_rf pthread)
+  target_link_libraries(pdsch_enodeb srsran_phy srsran_common srsran_rf_emane pthread)
 
   add_executable(npdsch_enodeb npdsch_enodeb.c)
-  target_link_libraries(npdsch_enodeb srsran_phy srsran_rf pthread)
+  target_link_libraries(npdsch_enodeb srsran_phy srsran_rf_emane pthread)
 
   add_executable(npdsch_ue npdsch_ue.c npdsch_ue_helper.cc)
-  target_link_libraries(npdsch_ue srsran_common srsran_phy srsran_rf pthread rrc_asn1)
+  target_link_libraries(npdsch_ue srsran_common srsran_phy srsran_rf_emane pthread rrc_asn1)
 else(RF_FOUND)
   add_definitions(-DDISABLE_RF)
 
@@ -66,7 +66,7 @@ endif(SRSGUI_FOUND)
 
 if (ZEROMQ_FOUND)
   add_executable(zmq_remote_rx zmq_remote_rx.c)
-  target_link_libraries(zmq_remote_rx srsran_phy srsran_rf)
+  target_link_libraries(zmq_remote_rx srsran_phy srsran_rf_emane)
 endif (ZEROMQ_FOUND)
 
 #################################################################
@@ -76,25 +76,25 @@ endif (ZEROMQ_FOUND)
 if(RF_FOUND)
 
   add_executable(cell_search cell_search.c)
-  target_link_libraries(cell_search srsran_phy srsran_common srsran_rf)
+  target_link_libraries(cell_search srsran_phy srsran_common srsran_rf_emane)
 
   add_executable(usrp_capture usrp_capture.c)
-  target_link_libraries(usrp_capture srsran_phy srsran_rf)
+  target_link_libraries(usrp_capture srsran_phy srsran_rf_emane)
 
   add_executable(usrp_capture_sync usrp_capture_sync.c)
-  target_link_libraries(usrp_capture_sync srsran_phy srsran_rf)
+  target_link_libraries(usrp_capture_sync srsran_phy srsran_rf_emane)
 
   add_executable(usrp_capture_sync_nbiot usrp_capture_sync_nbiot.c)
-  target_link_libraries(usrp_capture_sync_nbiot srsran_rf srsran_phy)
+  target_link_libraries(usrp_capture_sync_nbiot srsran_rf_emane srsran_phy)
 
   add_executable(cell_search_nbiot cell_search_nbiot.c)
-  target_link_libraries(cell_search_nbiot srsran_rf srsran_phy)
+  target_link_libraries(cell_search_nbiot srsran_rf_emane srsran_phy)
 
   add_executable(usrp_txrx usrp_txrx.c)
-  target_link_libraries(usrp_txrx srsran_phy srsran_rf)
+  target_link_libraries(usrp_txrx srsran_phy srsran_rf_emane)
 
   add_executable(pssch_ue pssch_ue.c)
-  target_link_libraries(pssch_ue srsran_phy srsran_common srsran_rf pthread)
+  target_link_libraries(pssch_ue srsran_phy srsran_common srsran_rf_emane pthread)
 
   if(SRSGUI_FOUND)
     target_link_libraries(pssch_ue ${SRSGUI_LIBRARIES})
diff --git a/lib/include/srsran/CMakeLists.txt b/lib/include/srsran/CMakeLists.txt
index 666ffb9a4..6f9dab682 100644
--- a/lib/include/srsran/CMakeLists.txt
+++ b/lib/include/srsran/CMakeLists.txt
@@ -23,6 +23,6 @@ configure_file(
     ${CMAKE_CURRENT_BINARY_DIR}/version.h
 )
 
-INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/version.h
-        DESTINATION "${INCLUDE_DIR}/srsran"
-)
+#INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/version.h
+#        DESTINATION "${INCLUDE_DIR}/srsran"
+#)
diff --git a/lib/src/asn1/CMakeLists.txt b/lib/src/asn1/CMakeLists.txt
index f8371811a..2ea1021fa 100644
--- a/lib/src/asn1/CMakeLists.txt
+++ b/lib/src/asn1/CMakeLists.txt
@@ -28,7 +28,7 @@ add_library(srsran_asn1 STATIC
 # ASN1 utils
 add_library(asn1_utils STATIC asn1_utils.cc)
 target_link_libraries(asn1_utils srsran_common)
-INSTALL(TARGETS asn1_utils DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS asn1_utils DESTINATION ${LIBRARY_DIR})
 
 # RRC ASN1 lib
 add_library(rrc_asn1 STATIC
@@ -54,24 +54,24 @@ add_library(rrc_asn1 STATIC
 # Compile RRC ASN1 optimized for size
 target_compile_options(rrc_asn1 PRIVATE "-Os")
 target_link_libraries(rrc_asn1 asn1_utils srsran_common)
-INSTALL(TARGETS rrc_asn1 DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS rrc_asn1 DESTINATION ${LIBRARY_DIR})
 
 # S1AP ASN1 lib
 add_library(s1ap_asn1 STATIC
             s1ap.cc s1ap_utils.cc)
 target_compile_options(s1ap_asn1 PRIVATE "-Os")
 target_link_libraries(s1ap_asn1 asn1_utils srsran_common)
-INSTALL(TARGETS s1ap_asn1 DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS s1ap_asn1 DESTINATION ${LIBRARY_DIR})
 
 # RRC NR ASN1
 add_library(rrc_nr_asn1 STATIC rrc_nr.cc rrc_nr_utils.cc)
 target_compile_options(rrc_nr_asn1 PRIVATE "-Os")
 target_link_libraries(rrc_nr_asn1 asn1_utils srsran_common)
-INSTALL(TARGETS rrc_nr_asn1 DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS rrc_nr_asn1 DESTINATION ${LIBRARY_DIR})
 # NGAP ASN1
 add_library(ngap_nr_asn1 STATIC ngap.cc)
 target_compile_options(ngap_nr_asn1 PRIVATE "-Os")
 target_link_libraries(ngap_nr_asn1 asn1_utils srsran_common)
-INSTALL(TARGETS ngap_nr_asn1 DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS ngap_nr_asn1 DESTINATION ${LIBRARY_DIR})
 
 
diff --git a/lib/src/common/CMakeLists.txt b/lib/src/common/CMakeLists.txt
index 0ce3d805b..1a714bab5 100644
--- a/lib/src/common/CMakeLists.txt
+++ b/lib/src/common/CMakeLists.txt
@@ -60,6 +60,6 @@ target_include_directories(srsran_common PUBLIC ${SEC_INCLUDE_DIRS} ${CMAKE_SOUR
 target_link_libraries(srsran_common srsran_phy srslog ${SEC_LIBRARIES} ${BACKWARD_LIBRARIES} ${SCTP_LIBRARIES})
 target_compile_definitions(srsran_common PRIVATE ${BACKWARD_DEFINITIONS})
 
-INSTALL(TARGETS srsran_common DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS srsran_common DESTINATION ${LIBRARY_DIR})
 
 add_subdirectory(test)
diff --git a/lib/src/mac/CMakeLists.txt b/lib/src/mac/CMakeLists.txt
index c9f34d3c9..7af794fbd 100644
--- a/lib/src/mac/CMakeLists.txt
+++ b/lib/src/mac/CMakeLists.txt
@@ -22,4 +22,4 @@ SET(SOURCES pdu.cc pdu_queue.cc mac_sch_pdu_nr.cc mac_rar_pdu_nr.cc)
 
 add_library(srsran_mac STATIC ${SOURCES})
 target_link_libraries(srsran_mac srsran_common)
-INSTALL(TARGETS srsran_mac DESTINATION ${LIBRARY_DIR})
\ No newline at end of file
+#INSTALL(TARGETS srsran_mac DESTINATION ${LIBRARY_DIR})
diff --git a/lib/src/phy/CMakeLists.txt b/lib/src/phy/CMakeLists.txt
index e5a47a4b2..2833422f9 100644
--- a/lib/src/phy/CMakeLists.txt
+++ b/lib/src/phy/CMakeLists.txt
@@ -55,4 +55,4 @@ set(srsran_srcs     $<TARGET_OBJECTS:srsran_agc>
 
 add_library(srsran_phy STATIC ${srsran_srcs} )
 target_link_libraries(srsran_phy pthread m ${FFT_LIBRARIES})
-INSTALL(TARGETS srsran_phy DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS srsran_phy DESTINATION ${LIBRARY_DIR})
diff --git a/lib/src/phy/phch/test/CMakeLists.txt b/lib/src/phy/phch/test/CMakeLists.txt
index 72968f832..a8690b9d6 100644
--- a/lib/src/phy/phch/test/CMakeLists.txt
+++ b/lib/src/phy/phch/test/CMakeLists.txt
@@ -621,7 +621,7 @@ add_lte_test(prach_test_multi_freq_offset_test_n4_o800_prb50 prach_test_multi -n
 
 if(RF_FOUND)
   add_executable(prach_test_usrp prach_test_usrp.c)
-  target_link_libraries(prach_test_usrp srsran_rf srsran_phy pthread)
+  target_link_libraries(prach_test_usrp srsran_rf_emane srsran_phy pthread)
 endif(RF_FOUND)
 
 ########################################################################
diff --git a/lib/src/phy/rf/CMakeLists.txt b/lib/src/phy/rf/CMakeLists.txt
index 52449e6e9..d2fd9cb06 100644
--- a/lib/src/phy/rf/CMakeLists.txt
+++ b/lib/src/phy/rf/CMakeLists.txt
@@ -20,8 +20,8 @@
 
 if(RF_FOUND)
   # This library is only used by the examples 
-  add_library(srsran_rf_utils STATIC rf_utils.c)
-  target_link_libraries(srsran_rf_utils srsran_phy)
+  add_library(srsran_rf_emane_utils STATIC rf_utils.c)
+  target_link_libraries(srsran_rf_emane_utils srsran_phy)
 
   # Include common RF files
   set(SOURCES_RF "")
@@ -45,7 +45,7 @@ if(RF_FOUND)
 
   if (UHD_FOUND AND UHD_ENABLE_CUSTOM_RFNOC)
     add_executable(rfnoc_test rfnoc_test.cc)
-    target_link_libraries(rfnoc_test srsran_rf ${UHD_LIBRARIES} ${Boost_LIBRARIES} /usr/lib/x86_64-linux-gnu/libboost_system.so)
+    target_link_libraries(rfnoc_test srsran_rf_emane ${UHD_LIBRARIES} ${Boost_LIBRARIES} /usr/lib/x86_64-linux-gnu/libboost_system.so)
     message(info ${Boost_LIBRARIES})
   endif (UHD_FOUND AND UHD_ENABLE_CUSTOM_RFNOC)
 
@@ -64,28 +64,28 @@ if(RF_FOUND)
     list(APPEND SOURCES_RF rf_zmq_imp.c rf_zmq_imp_tx.c rf_zmq_imp_rx.c)
   endif (ZEROMQ_FOUND)
 
-  add_library(srsran_rf SHARED ${SOURCES_RF})
-  target_link_libraries(srsran_rf srsran_rf_utils srsran_phy)
-  set_target_properties(srsran_rf PROPERTIES VERSION ${SRSRAN_VERSION_STRING} SOVERSION ${SRSRAN_SOVERSION})
+  add_library(srsran_rf_emane SHARED ${SOURCES_RF})
+  target_link_libraries(srsran_rf_emane srsran_rf_emane_utils srsran_phy)
+  set_target_properties(srsran_rf_emane PROPERTIES VERSION ${SRSRAN_VERSION_STRING} SOVERSION ${SRSRAN_SOVERSION})
   
   if (UHD_FOUND)
-    target_link_libraries(srsran_rf ${UHD_LIBRARIES})
+    target_link_libraries(srsran_rf_emane ${UHD_LIBRARIES})
   endif (UHD_FOUND)
 
   if (BLADERF_FOUND)
-    target_link_libraries(srsran_rf ${BLADERF_LIBRARIES})
+    target_link_libraries(srsran_rf_emane ${BLADERF_LIBRARIES})
   endif (BLADERF_FOUND)
 
   if (SOAPYSDR_FOUND AND ENABLE_SOAPYSDR)
-    target_link_libraries(srsran_rf ${SOAPYSDR_LIBRARIES})
+    target_link_libraries(srsran_rf_emane ${SOAPYSDR_LIBRARIES})
   endif (SOAPYSDR_FOUND AND ENABLE_SOAPYSDR)
 
   if (ZEROMQ_FOUND)
-    target_link_libraries(srsran_rf ${ZEROMQ_LIBRARIES})
+    target_link_libraries(srsran_rf_emane ${ZEROMQ_LIBRARIES})
     add_executable(rf_zmq_test rf_zmq_test.c)
-    target_link_libraries(rf_zmq_test srsran_rf)
+    target_link_libraries(rf_zmq_test srsran_rf_emane)
     #add_test(rf_zmq_test rf_zmq_test)
   endif (ZEROMQ_FOUND)
 
-  INSTALL(TARGETS srsran_rf DESTINATION ${LIBRARY_DIR})
+  INSTALL(TARGETS srsran_rf_emane DESTINATION ${LIBRARY_DIR})
 endif(RF_FOUND)
diff --git a/lib/src/phy/sync/test/CMakeLists.txt b/lib/src/phy/sync/test/CMakeLists.txt
index 7ef124c70..1f94817b3 100644
--- a/lib/src/phy/sync/test/CMakeLists.txt
+++ b/lib/src/phy/sync/test/CMakeLists.txt
@@ -30,13 +30,13 @@ target_link_libraries(npss_file srsran_phy)
 
 if(RF_FOUND)
   add_executable(pss_usrp pss_usrp.c)
-  target_link_libraries(pss_usrp srsran_rf srsran_phy)
+  target_link_libraries(pss_usrp srsran_rf_emane srsran_phy)
 
   add_executable(npss_usrp npss_usrp.c)
-  target_link_libraries(npss_usrp srsran_rf srsran_phy)
+  target_link_libraries(npss_usrp srsran_rf_emane srsran_phy)
 
   add_executable(nsss_usrp nsss_usrp.c)
-  target_link_libraries(nsss_usrp srsran_rf srsran_phy)
+  target_link_libraries(nsss_usrp srsran_rf_emane srsran_phy)
 endif(RF_FOUND)
 
 if(SRSGUI_FOUND)
diff --git a/lib/src/phy/ue/test/CMakeLists.txt b/lib/src/phy/ue/test/CMakeLists.txt
index ee3fb9d8b..10d2e0790 100644
--- a/lib/src/phy/ue/test/CMakeLists.txt
+++ b/lib/src/phy/ue/test/CMakeLists.txt
@@ -40,14 +40,14 @@ add_test(ue_dl_nbiot_test ue_dl_nbiot_test)
 
 if(RF_FOUND)
     add_executable(ue_mib_sync_test_nbiot_usrp ue_mib_sync_test_nbiot_usrp.c)
-    target_link_libraries(ue_mib_sync_test_nbiot_usrp srsran_phy srsran_rf pthread)
+    target_link_libraries(ue_mib_sync_test_nbiot_usrp srsran_phy srsran_rf_emane pthread)
 
     add_executable(ue_sync_test_nbiot_usrp ue_sync_test_nbiot_usrp.c)
-    target_link_libraries(ue_sync_test_nbiot_usrp srsran_rf srsran_phy pthread)
+    target_link_libraries(ue_sync_test_nbiot_usrp srsran_rf_emane srsran_phy pthread)
     if(SRSGUI_FOUND)
         include_directories(${SRSGUI_INCLUDE_DIRS})
         target_link_libraries(ue_sync_test_nbiot_usrp ${SRSGUI_LIBRARIES})
     else(SRSGUI_FOUND)
         add_definitions(-DDISABLE_GRAPHICS)
     endif(SRSGUI_FOUND)
-endif(RF_FOUND)
\ No newline at end of file
+endif(RF_FOUND)
diff --git a/lib/src/radio/CMakeLists.txt b/lib/src/radio/CMakeLists.txt
index 77b6570ca..4cbfba4e8 100644
--- a/lib/src/radio/CMakeLists.txt
+++ b/lib/src/radio/CMakeLists.txt
@@ -20,8 +20,8 @@
 
 if(RF_FOUND)
   add_library(srsran_radio STATIC radio.cc channel_mapping.cc)
-  target_link_libraries(srsran_radio srsran_rf srsran_common)
-  INSTALL(TARGETS srsran_radio DESTINATION ${LIBRARY_DIR})
+  target_link_libraries(srsran_radio srsran_rf_emane srsran_common)
+  #INSTALL(TARGETS srsran_radio DESTINATION ${LIBRARY_DIR})
 endif(RF_FOUND)
 
 add_subdirectory(test)
diff --git a/lib/src/srslog/CMakeLists.txt b/lib/src/srslog/CMakeLists.txt
index 635d064be..442b6baaf 100644
--- a/lib/src/srslog/CMakeLists.txt
+++ b/lib/src/srslog/CMakeLists.txt
@@ -42,4 +42,4 @@ find_package(Threads REQUIRED)
 
 add_library(srslog STATIC ${SOURCES})
 target_link_libraries(srslog ${CMAKE_THREAD_LIBS_INIT})
-INSTALL(TARGETS srslog DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS srslog DESTINATION ${LIBRARY_DIR})
diff --git a/lib/src/upper/CMakeLists.txt b/lib/src/upper/CMakeLists.txt
index aa06021b0..17a71f6e6 100644
--- a/lib/src/upper/CMakeLists.txt
+++ b/lib/src/upper/CMakeLists.txt
@@ -35,4 +35,4 @@ set(SOURCES gtpu.cc
 
 add_library(srsran_upper STATIC ${SOURCES})
 target_link_libraries(srsran_upper srsran_common srsran_asn1)
-INSTALL(TARGETS srsran_upper DESTINATION ${LIBRARY_DIR})
+#INSTALL(TARGETS srsran_upper DESTINATION ${LIBRARY_DIR})
diff --git a/srsenb/CMakeLists.txt b/srsenb/CMakeLists.txt
index 979dc7295..fff7b68e2 100644
--- a/srsenb/CMakeLists.txt
+++ b/srsenb/CMakeLists.txt
@@ -52,7 +52,7 @@ add_subdirectory(test)
 ########################################################################
 # Default configuration files
 ########################################################################
-install(FILES enb.conf.example DESTINATION ${DATA_DIR})
-install(FILES drb.conf.example DESTINATION ${DATA_DIR})
-install(FILES rr.conf.example DESTINATION ${DATA_DIR})
-install(FILES sib.conf.example DESTINATION ${DATA_DIR})
\ No newline at end of file
+#install(FILES enb.conf.example DESTINATION ${DATA_DIR})
+#install(FILES drb.conf.example DESTINATION ${DATA_DIR})
+#install(FILES rr.conf.example DESTINATION ${DATA_DIR})
+#install(FILES sib.conf.example DESTINATION ${DATA_DIR})
diff --git a/srsepc/CMakeLists.txt b/srsepc/CMakeLists.txt
index 47df8d5b8..fb63f910d 100644
--- a/srsepc/CMakeLists.txt
+++ b/srsepc/CMakeLists.txt
@@ -51,7 +51,7 @@ add_subdirectory(src)
 ########################################################################
 # Default configuration files
 ########################################################################
-install(FILES epc.conf.example DESTINATION ${DATA_DIR})
-install(FILES mbms.conf.example DESTINATION ${DATA_DIR})
-install(FILES user_db.csv.example DESTINATION ${DATA_DIR})
-install(PROGRAMS srsepc_if_masq.sh DESTINATION ${RUNTIME_DIR})
\ No newline at end of file
+#install(FILES epc.conf.example DESTINATION ${DATA_DIR})
+#install(FILES mbms.conf.example DESTINATION ${DATA_DIR})
+#install(FILES user_db.csv.example DESTINATION ${DATA_DIR})
+install(PROGRAMS srsepc_if_masq.sh DESTINATION ${RUNTIME_DIR})
diff --git a/srsue/CMakeLists.txt b/srsue/CMakeLists.txt
index a5e7fa5a4..8e2f03eb4 100644
--- a/srsue/CMakeLists.txt
+++ b/srsue/CMakeLists.txt
@@ -48,4 +48,4 @@ add_subdirectory(test)
 ########################################################################
 # Default configuration files
 ########################################################################
-install(FILES ue.conf.example DESTINATION ${DATA_DIR})
\ No newline at end of file
+#install(FILES ue.conf.example DESTINATION ${DATA_DIR})
